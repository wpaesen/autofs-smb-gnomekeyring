#!/bin/bash

# this file must be executable to work! chmod 755

# run gkeyring as the specified user.  This allows root to connect to
# the users Session DBUS instance and retrieve information stored in gnome-keyring

# The first argument given to this script is used as the username as which
# the gkeyring application should be run.  All following arguments are forwarded
# to the gkeyring application.

if [ "$EUID" -ne "0" ]; then
		echo "I can only run as root" >&2;
		exit 1
fi

# find gkeyring in standard locations
for P in /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin
do
		if [ -x $P/gkeyring ]
		then
				GKEYRING=$P/gkeyring
				break
		fi
done

if [ ! -x "$GKEYRING" ]; then
		echo "gkeyring not found" >&2;
		exit 2;
fi

# find pgrep in standard locations
for P in /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin
do
		if [ -x $P/pgrep ]
		then
				PGREP=$P/pgrep
				break
		fi
done

if [ ! -x "$PGREP" ]; then
		echo "pgrep not found" >&2;
		exit 2;
fi

# remove username from parameter list
as_user="$1"
shift

# Find pid of running gnome-keyring daemon for the given user
krpid=$( $PGREP -f "gnome-keyring-daemon" -u "$as_user" -o )
if [ -z $krpid ]; then
  echo "gnome-keyring-daemon not running for user $as_user"
  exit 3
fi

dbusaddress=$( cat /proc/$krpid/environ | grep -z "^DBUS_SESSION_BUS_ADDRESS=" | tr -d "\000" )
if [ -z $dbusaddress ]; then
  echo "unable to determine DBUS_SESSION_BUS_ADDRESS for user $USER"
  exit 4
fi


exec su "${as_user}" <<EOF
  # run gkeyring
  $dbusaddress $GKEYRING $@
EOF



